[2023-02-23 23:14:40,927][__main__][INFO] - Predicting surfaces with DeepCSR
Config:
user_config: null
inputs:
  mri_id: 201818
  mri_vol_path: /data/users2/washbee/speedrun/deepcsr-preprocessed/201818/mri.nii.gz
  model_checkpoint: /data/users2/washbee/speedrun/outputdirs/deepcsr-output_dir/best_model.pth
  model_surfaces:
  - lh_pial
  - lh_white
  - rh_pial
  - rh_white
generator:
  bbox_size:
  - 192.0
  - 228.0
  - 192.0
  resolution: 256
  points_batch_size: 1000000
  isrpr_vol_post_process: true
  isrpr_vol_smooth: 1.0
  fix_topology: true
  iso_surface_level: 0.0
model:
  hypercol: true
  device: cuda:0
outputs:
  output_dir: /data/users2/washbee/speedrun/outputdirs/deepcsr-output_dir-timing/checkpoints/predict_debug/
  save_all: false

[2023-02-23 23:14:45,513][__main__][INFO] - MRI /data/users2/washbee/speedrun/deepcsr-preprocessed/201818/mri.nii.gz read with torch.Size([1, 182, 218, 182]) dimensions in 4.5843 secs
mri_header <class 'nibabel.nifti1.Nifti1Header'> object, endian='<'
sizeof_hdr      : 348
data_type       : b''
db_name         : b''
extents         : 0
session_error   : 0
regular         : b'r'
dim_info        : 0
dim             : [  3 182 218 182   1   1   1   1]
intent_p1       : 0.0
intent_p2       : 0.0
intent_p3       : 0.0
intent_code     : none
datatype        : uint8
bitpix          : 8
slice_start     : 0
pixdim          : [-1.  1.  1.  1.  1.  0.  0.  0.]
vox_offset      : 0.0
scl_slope       : nan
scl_inter       : nan
slice_end       : 0
slice_code      : unknown
xyzt_units      : 10
cal_max         : 0.0
cal_min         : 0.0
slice_duration  : 0.0
toffset         : 0.0
glmax           : 0
glmin           : 0
descrip         : b'Warped image using NiftyReg (reg_resample)'
aux_file        : b''
qform_code      : mni
sform_code      : mni
quatern_b       : 0.0
quatern_c       : 1.0
quatern_d       : 0.0
qoffset_x       : 90.0
qoffset_y       : -126.0
qoffset_z       : -72.0
srow_x          : [-1.  0.  0. 90.]
srow_y          : [   0.    1.    0. -126.]
srow_z          : [  0.   0.   1. -72.]
intent_name     : b''
magic           : b'n+1' <class 'nibabel.nifti1.Nifti1Header'>
mri_vox tensor([[[[-0.8432, -0.8572, -0.8572,  ..., -0.9130, -0.9130, -0.9130],
          [-0.8432, -0.8572, -0.8432,  ..., -0.9130, -0.9130, -0.9130],
          [-0.8432, -0.8572, -0.8432,  ..., -0.9130, -0.9130, -0.9130],
          ...,
          [-0.8292, -0.8292, -0.8292,  ..., -0.8153, -0.8432, -0.8292],
          [-0.8292, -0.8432, -0.8292,  ..., -0.8292, -0.8432, -0.8153],
          [-0.8572, -0.8432, -0.8292,  ..., -0.8432, -0.8292, -0.8292]],

         [[-0.8432, -0.8292, -0.8292,  ..., -0.9130, -0.9130, -0.9130],
          [-0.8432, -0.8432, -0.8432,  ..., -0.9130, -0.9130, -0.9130],
          [-0.8572, -0.8572, -0.8572,  ..., -0.9130, -0.9130, -0.9130],
          ...,
          [-0.8153, -0.8292, -0.8432,  ..., -0.8292, -0.8292, -0.8292],
          [-0.8292, -0.8292, -0.8432,  ..., -0.8292, -0.8432, -0.8432],
          [-0.8153, -0.8432, -0.8572,  ..., -0.8432, -0.8432, -0.8432]],

         [[-0.8292, -0.8432, -0.8432,  ..., -0.9130, -0.9130, -0.9130],
          [-0.8292, -0.8432, -0.8292,  ..., -0.9130, -0.9130, -0.9130],
          [-0.8432, -0.8432, -0.8432,  ..., -0.9130, -0.9130, -0.9130],
          ...,
          [-0.8153, -0.8292, -0.8292,  ..., -0.8292, -0.8292, -0.8292],
          [-0.8153, -0.8292, -0.8153,  ..., -0.8292, -0.8432, -0.8572],
          [-0.8153, -0.8292, -0.8153,  ..., -0.8432, -0.8572, -0.8572]],

         ...,

         [[-0.8711, -0.8711, -0.8432,  ..., -0.9130, -0.9130, -0.9130],
          [-0.8572, -0.8711, -0.8572,  ..., -0.9130, -0.9130, -0.9130],
          [-0.8432, -0.8572, -0.8711,  ..., -0.9130, -0.9130, -0.9130],
          ...,
          [-0.8153, -0.8153, -0.8292,  ..., -0.8432, -0.8432, -0.8432],
          [-0.8292, -0.8292, -0.8292,  ..., -0.8432, -0.8432, -0.8432],
          [-0.8432, -0.8292, -0.8292,  ..., -0.8432, -0.8432, -0.8292]],

         [[-0.8711, -0.8572, -0.8572,  ..., -0.9130, -0.9130, -0.9130],
          [-0.8572, -0.8572, -0.8572,  ..., -0.9130, -0.9130, -0.9130],
          [-0.8432, -0.8572, -0.8572,  ..., -0.9130, -0.9130, -0.9130],
          ...,
          [-0.8153, -0.8013, -0.8153,  ..., -0.8432, -0.8432, -0.8292],
          [-0.8013, -0.8153, -0.8292,  ..., -0.8572, -0.8432, -0.8432],
          [-0.8153, -0.8292, -0.8292,  ..., -0.8432, -0.8292, -0.8153]],

         [[-0.8711, -0.8572, -0.8432,  ..., -0.9130, -0.9130, -0.9130],
          [-0.8711, -0.8572, -0.8292,  ..., -0.9130, -0.9130, -0.9130],
          [-0.8572, -0.8572, -0.8432,  ..., -0.9130, -0.9130, -0.9130],
          ...,
          [-0.8292, -0.8432, -0.8432,  ..., -0.8432, -0.8432, -0.8432],
          [-0.8292, -0.8432, -0.8572,  ..., -0.8432, -0.8432, -0.8432],
          [-0.8153, -0.8292, -0.8292,  ..., -0.8292, -0.8572, -0.8432]]]],
       device='cuda:0') <class 'torch.Tensor'>
mri_affine [[  -1.    0.    0.   90.]
 [   0.    1.    0. -126.]
 [   0.    0.    1.  -72.]
 [   0.    0.    0.    1.]] <class 'numpy.ndarray'>
mri_affine_inv tensor([[[ -1.,  -0.,  -0.,  90.],
         [  0.,   1.,   0., 126.],
         [  0.,   0.,   1.,  72.],
         [  0.,   0.,   0.,   1.]]], device='cuda:0') <class 'torch.Tensor'>
